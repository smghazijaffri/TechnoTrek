@page "/buying";
@using SharedClass.Components.Layout
@using System.Globalization
@using SharedClass.Components.Data
@inject IJSRuntime JSRuntime;
@inject ISnackbar Snackbar;
@inject NavigationManager NavigationManager;
@inject ILocalStorageService localStorage;
@layout AdminLayout;

@if (isLoading)
{
    <div class="row">
        <MudPaper Width="300px" Elevation="1" Style="margin-right:20px; border-radius:10px; margin-bottom: 20px;">
            <MudList Clickable="true">
                <MudListItem Avatar="@Icons.Material.Outlined.RequestPage" Href="/purchaserequisition" Style="border-radius:10px">
                    Purchase Requisition
                </MudListItem>
            </MudList>
        </MudPaper>

        <MudPaper Width="300px" Elevation="1" Style="margin-right:20px; border-radius:10px; margin-bottom: 20px;">
            <MudList Clickable="true">
                <MudListItem Avatar="@Icons.Material.Outlined.RequestQuote" Href="#" Style="border-radius:10px">
                    Request for Quotation
                </MudListItem>
            </MudList>
        </MudPaper>

        <MudPaper Width="300px" Elevation="1" Style="margin-right:20px; border-radius:10px; margin-bottom: 20px;">
            <MudList Clickable="true">
                <MudListItem Avatar="@Icons.Material.Outlined.RequestPage" Href="/purchaseorder" Style="border-radius:10px">
                    Purchase Order
                </MudListItem>
            </MudList>
        </MudPaper>

        <MudPaper Width="300px" Elevation="1" Style="margin-right:20px; border-radius:10px; margin-bottom: 20px;">
            <MudList Clickable="true">
                <MudListItem Avatar="@Icons.Material.Outlined.RequestQuote" Href="#" Style="border-radius:10px">
                    Purchase Invoice
                </MudListItem>
            </MudList>
        </MudPaper>
    </div>
}

@code {
    bool isLoading = false;
    public bool isAuthorized { get; set; }
    protected override async void OnInitialized()
    {
        var cookieContent = await localStorage.GetItemAsync<bool>("Authorized");
        isAuthorized = cookieContent;
        if (isAuthorized)
        {
            isLoading = true;
            StateHasChanged();
        }
        else
        {
            isLoading = false;
            NavigationManager.NavigateTo("/adminlogin");
            Snackbar.Clear();
            Snackbar.Add("Not Authorized", Severity.Error);
        }
        base.OnInitialized();
    }
}
