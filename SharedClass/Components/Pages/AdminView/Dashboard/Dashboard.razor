@page "/dashboard";

@using Microsoft.Maui.Controls;

@layout AdminLayout;
@implements IDisposable;
@inject ISnackbar Snackbar;
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager;

@* <div class="m-auto">
    <Insights />
</div> *@

@* <script defer>
    window.disableBackGesture = function () {
        window.history.pushState(null, document.title, location.href);
        window.addEventListener('popstate', function (event) {
            window.history.pushState(null, document.title, location.href);
        });
    };

    window.disableBackGestureMobile = (dotNetHelper) => {
        window.history.pushState(null, document.title, location.href);
        window.addEventListener('popstate', function (event) {
            window.history.pushState(null, document.title, location.href);
            return dotNetHelper.invokeMethodAsync('HandleBackGesture');
        });
    };

    window.enableBackGesture = function () {
        window.removeEventListener('popstate', function (event) {
            window.history.pushState(null, document.title, location.href);
        });
    };
</script> *@

@code {
    // string? DeviceType { get; set; }

    private IDisposable? registration;

    // private DotNetObjectReference<Dashboard>? objRef;

    protected override void OnInitialized()
    {
        registration = NavigationManager.RegisterLocationChangingHandler(OnLocationChanging);
    }

    // protected override void OnAfterRender(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         registration = NavigationManager.RegisterLocationChangingHandler(OnLocationChanging);

    //         // DeviceType = await JSRuntime.InvokeAsync<string>("detectDeviceType");

    //         // if (DeviceType == "Mobile")
    //         // {
    //         //     objRef = DotNetObjectReference.Create(this);
    //         //     await TriggerDotNetInstanceMethod();
    //         // }
    //         // else
    //         // {
    //         //     await JSRuntime.InvokeVoidAsync("disableBackGesture");
    //         // }
    //     }
    // }

    private ValueTask OnLocationChanging(LocationChangingContext context)
    {
        if (context.TargetLocation == "/login" || context.TargetLocation == "/cart" || context.TargetLocation == "/user" || context.TargetLocation == "/order-history"
        || context.TargetLocation == "/products" || context.TargetLocation == "/signup" || context.TargetLocation == "/buildpc")
        {
            context.PreventNavigation();
        }

        return ValueTask.CompletedTask;
    }

    public void Dispose() => registration?.Dispose();

    // public async Task TriggerDotNetInstanceMethod()
    // {
    //     string result = await JSRuntime.InvokeAsync<string>("disableBackGestureMobile", objRef);
    // }

    // [JSInvokable]
    // public void HandleBackGesture()
    // {
    //     Application.Current.Quit();
    // }

    // public void Dispose()
    // {
    //     objRef?.Dispose();
    //     JSRuntime.InvokeVoidAsync("enableBackGesture");
    // }
}