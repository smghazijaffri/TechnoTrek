@page "/dashboard";

@using Microsoft.Maui.Controls;

@layout AdminLayout;
@inject ISnackbar Snackbar;
@inject IJSRuntime JSRuntime;

<div class="m-auto">
@*     <Insights />
 *@</div>

<script defer>
    window.disableBackGesture = function () {
        window.history.pushState(null, document.title, location.href);
        window.addEventListener('popstate', function (event) {
            window.history.pushState(null, document.title, location.href);
        });
    };

    window.disableBackGestureMobile = (dotNetHelper) => {
        window.history.pushState(null, document.title, location.href);
        window.addEventListener('popstate', function (event) {
            window.history.pushState(null, document.title, location.href);
            return dotNetHelper.invokeMethodAsync('HandleBackGesture');
        });
    };

    window.enableBackGesture = function () {
        window.removeEventListener('popstate', function (event) {
            window.history.pushState(null, document.title, location.href);
        });
    };
</script>

@code {
    string? DeviceType { get; set; }

    private DotNetObjectReference<Dashboard>? objRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            DeviceType = await JSRuntime.InvokeAsync<string>("detectDeviceType");

            if (DeviceType == "Mobile")
            {
                objRef = DotNetObjectReference.Create(this);
                await TriggerDotNetInstanceMethod();
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("disableBackGesture");
            }
        }
    }

    public async Task TriggerDotNetInstanceMethod()
    {
        string result = await JSRuntime.InvokeAsync<string>("disableBackGestureMobile", objRef);
    }

    [JSInvokable]
    public void HandleBackGesture()
    {
        Application.Current.Quit();
    }

    public void Dispose()
    {
        objRef?.Dispose();
        JSRuntime.InvokeVoidAsync("enableBackGesture");
    }
}