@inject Select select;
@inject Insert insert;
@inject ISnackbar Snackbar;
@inject IJSRuntime JSRuntime;
@inject IDialogService DialogService;
@inject ProtectedLocalStorage _protectedLocalStore;

<section>
    <div class="container py-5">
        @if (Memories != null)
        {
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4">
                @foreach (var values in Memories)
                {
                    <div class="col mb-4">
                        <div class="card text-black" style="border-radius:20px;">
                            <div class="card-body">
                                <h5 class="card-title">@values.Brand</h5>
                                <h5 class="card-title">@values.ItemName</h5>
                                <div>
                                    <div class="d-flex justify-content-center" @onclick="() => OnButtonClicked(values.Description)" style="cursor: pointer;">
                                        <h6><span>Show Description</span></h6>
                                    </div>
                                </div>
                                <div>
                                    <button class="btn btnpc m-1" style="background-color:#A687CB; color:white"
                                            @onclick="() => Select(values)">
                                        Select
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>


@code {
    private IEnumerable<ItemClass> Memories;

    protected override async Task OnInitializedAsync()
    {
        Memories = await select.GetItemsAsync("Memory");
    }
    private async Task Select(ItemClass selectedMemory)
    {
        string component = "Memory";
        await _protectedLocalStore.SetLocalAsync(component, selectedMemory.ItemCode);
        Snackbar.Clear();
        Snackbar.Add("Selection Saved", Severity.Success);
    }

    private async void OnButtonClicked(string message)
    {
        bool? result = await DialogService.ShowMessageBox(
            "Description", message);
        StateHasChanged();
    }
}
